# SPDX-FileCopyrightText: Copyright 2024 LG Electronics Inc.
# SPDX-License-Identifier: Apache-2.0

############################
# === Build Stage ===
############################
FROM rust:1.85.0-slim AS builder

WORKDIR /piccolo

# Arguments to define build target
ARG TARGETARCH
ENV TARGETARCH=${TARGETARCH}

# Copy shared and server components
COPY ./src/common/ /piccolo/common
COPY ./src/server/ /piccolo/server

# Install build dependencies and build release binaries
RUN apt update -y && \
    apt install -y \
        libdbus-1-dev \
        pkg-config \
        protobuf-compiler \
        libssl-dev && \
    cd /piccolo/server && \
    cargo build --release

# Collect glibc runtime dependencies
WORKDIR /dummy
RUN if [ "$TARGETARCH" = "amd64" ]; then \
        ITEMARCH="x86_64"; \
        mkdir -p /dummy/lib64 /dummy/${ITEMARCH}-linux-gnu/ && \
        cp -v /lib64/ld-linux-x86-64.so.2 /dummy/lib64/ || true && \
        cp -v /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2 /dummy/${ITEMARCH}-linux-gnu/ || true; \
    elif [ "$TARGETARCH" = "arm64" ]; then \
        ITEMARCH="aarch64"; \
        mkdir -p /dummy/${ITEMARCH}-linux-gnu/ && \
        cp -v /lib/aarch64-linux-gnu/ld-linux-aarch64.so.1 /dummy/${ITEMARCH}-linux-gnu/ || true && \
        cp -v /lib/ld-linux-aarch64.so.1 /dummy/ || true; \
    else \
        echo "Unsupported architecture: $TARGETARCH" && exit 1; \
    fi && \
    for lib in \
        libc.so.6 libcap.so.2 libdbus-1.so.3 libgcc_s.so.1 \
        libgcrypt.so.20 libgpg-error.so.0 liblzma.so.5 \
        liblz4.so.1 libm.so.6 libsystemd.so.0 libzstd.so.1; do \
        cp -v /lib/${ITEMARCH}-linux-gnu/$lib* /dummy/${ITEMARCH}-linux-gnu/ || true; \
    done

############################
# === Runtime Stage (Alpine) ===
############################
FROM alpine:3.21.3

ARG TARGETARCH
ENV TARGETARCH=${TARGETARCH}

WORKDIR /piccolo

# Copy glibc shared libs
COPY --from=builder /dummy /lib

# Fix dynamic linker path if needed
RUN if [ "$TARGETARCH" = "amd64" ]; then \
        mkdir -p /lib64 && \
        cp -v /lib/lib64/ld-linux-x86-64.so.2 /lib64/ || true; \
    elif [ "$TARGETARCH" = "arm64" ]; then \
        echo "Using aarch64 runtime"; \
    else \
        echo "Unsupported architecture: $TARGETARCH" && exit 1; \
    fi

# Copy runtime settings and binaries
COPY ./src/settings.yaml .
COPY --from=builder \
    /piccolo/server/target/release/apiserver \
    /piccolo/server/target/release/monitoringserver \
    /piccolo/server/target/release/policymanager \
    ./

# Set default command
CMD ["sh"]
